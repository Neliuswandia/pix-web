{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/dev-projects/pix-web/payment-app/app/collection/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport Image from \"next/image\";\r\nimport { notFound } from \"next/navigation\";\r\n\r\n// Mock data for collections - in real app this would come from database\r\nconst collectionData: { [key: string]: any } = {\r\n  \"abc123\": {\r\n    id: \"abc123\",\r\n    images: [\r\n      {\r\n        id: \"1\",\r\n        src: \"/next.svg\",\r\n        title: \"Mountain Sunset\",\r\n        photographer: \"John Doe\",\r\n        price: 2500,\r\n        description: \"Breathtaking sunset over mountain peaks\"\r\n      },\r\n      {\r\n        id: \"2\", \r\n        src: \"/vercel.svg\",\r\n        title: \"City Lights\",\r\n        photographer: \"John Doe\",\r\n        price: 3000,\r\n        description: \"Urban nightscape with vibrant city lights\"\r\n      }\r\n    ],\r\n    totalPrice: 5500,\r\n    photographer: \"John Doe\",\r\n    title: \"Nature & Urban Collection\"\r\n  }\r\n};\r\n\r\ninterface CollectionPageProps {\r\n  params: {\r\n    id: string;\r\n  };\r\n}\r\n\r\nexport default function CollectionPage({ params }: CollectionPageProps) {\r\n  const [selectedImages, setSelectedImages] = useState<string[]>([]);\r\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n\r\n  const collection = collectionData[params.id];\r\n\r\n  if (!collection) {\r\n    notFound();\r\n  }\r\n\r\n  const toggleImageSelection = (imageId: string) => {\r\n    setSelectedImages(prev => \r\n      prev.includes(imageId) \r\n        ? prev.filter(id => id !== imageId)\r\n        : [...prev, imageId]\r\n    );\r\n  };\r\n\r\n  const getSelectedTotal = () => {\r\n    return collection.images\r\n      .filter((img: any) => selectedImages.includes(img.id))\r\n      .reduce((total: number, img: any) => total + img.price, 0);\r\n  };\r\n\r\n  const handlePayment = async () => {\r\n    setLoading(true);\r\n    \r\n    // Simulate payment processing\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    \r\n    setLoading(false);\r\n    setPaymentSuccess(true);\r\n    \r\n    setTimeout(() => {\r\n      setShowPaymentModal(false);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-8\">\r\n      <div className=\"container mx-auto px-4 max-w-6xl\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">{collection.title}</h1>\r\n          <p className=\"text-gray-600\">by {collection.photographer}</p>\r\n          <p className=\"text-sm text-gray-500 mt-2\">Select images to purchase</p>\r\n        </div>\r\n\r\n        {/* Image Grid */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\r\n          {collection.images.map((image: any) => (\r\n            <div\r\n              key={image.id}\r\n              className={`bg-white rounded-lg shadow-lg overflow-hidden cursor-pointer transition-all transform hover:scale-105 ${\r\n                selectedImages.includes(image.id) ? 'ring-4 ring-blue-500' : ''\r\n              }`}\r\n              onClick={() => toggleImageSelection(image.id)}\r\n            >\r\n              <div className=\"aspect-square relative\">\r\n                {/* Blurred Image */}\r\n                <Image\r\n                  src={image.src}\r\n                  alt={image.title}\r\n                  fill\r\n                  className={`object-cover transition-all duration-300 ${\r\n                    !paymentSuccess || !selectedImages.includes(image.id) ? 'blur-image' : ''\r\n                  }`}\r\n                />\r\n                \r\n                {/* Selection Overlay */}\r\n                <div className={`absolute inset-0 bg-black transition-opacity ${\r\n                  !paymentSuccess || !selectedImages.includes(image.id) ? 'bg-opacity-30' : 'bg-opacity-0'\r\n                } flex items-center justify-center`}>\r\n                  {(!paymentSuccess || !selectedImages.includes(image.id)) && (\r\n                    <div className=\"text-center text-white\">\r\n                      <div className=\"text-4xl mb-2\">ðŸ”’</div>\r\n                      <p className=\"text-sm\">Click to select</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Selection Checkbox */}\r\n                <div className=\"absolute top-4 right-4\">\r\n                  <div className={`w-6 h-6 rounded-full border-2 border-white flex items-center justify-center ${\r\n                    selectedImages.includes(image.id) ? 'bg-blue-500' : 'bg-black bg-opacity-30'\r\n                  }`}>\r\n                    {selectedImages.includes(image.id) && (\r\n                      <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                      </svg>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"p-4\">\r\n                <h3 className=\"font-semibold text-gray-800 mb-1\">{image.title}</h3>\r\n                <p className=\"text-sm text-gray-600 mb-2\">{image.description}</p>\r\n                <div className=\"text-lg font-bold text-blue-600\">\r\n                  KES {image.price.toLocaleString()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Purchase Summary */}\r\n        {selectedImages.length > 0 && (\r\n          <div className=\"bg-white rounded-lg shadow-lg p-6 sticky bottom-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-lg font-semibold text-gray-800\">\r\n                  {selectedImages.length} image{selectedImages.length !== 1 ? 's' : ''} selected\r\n                </p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">\r\n                  Total: KES {getSelectedTotal().toLocaleString()}\r\n                </p>\r\n              </div>\r\n              <button\r\n                onClick={() => setShowPaymentModal(true)}\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-semibold transition-colors\"\r\n              >\r\n                Purchase Selected\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Payment Modal */}\r\n        {showPaymentModal && (\r\n          <div className=\"fixed inset-0 payment-modal flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white rounded-lg shadow-2xl max-w-md w-full p-6 transform transition-all\">\r\n              {!paymentSuccess ? (\r\n                <>\r\n                  <div className=\"text-center mb-6\">\r\n                    <div className=\"text-4xl mb-4\">ðŸ’³</div>\r\n                    <h3 className=\"text-2xl font-bold text-gray-800 mb-2\">Complete Purchase</h3>\r\n                    <p className=\"text-gray-600\">Secure payment for selected images</p>\r\n                  </div>\r\n\r\n                  <div className=\"border border-gray-200 rounded-lg p-4 mb-6\">\r\n                    <div className=\"space-y-2 mb-3\">\r\n                      {collection.images\r\n                        .filter((img: any) => selectedImages.includes(img.id))\r\n                        .map((img: any) => (\r\n                          <div key={img.id} className=\"flex justify-between text-sm\">\r\n                            <span>{img.title}</span>\r\n                            <span>KES {img.price.toLocaleString()}</span>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"border-t pt-2 flex justify-between font-bold\">\r\n                      <span>Total</span>\r\n                      <span className=\"text-blue-600\">KES {getSelectedTotal().toLocaleString()}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-4 mb-6\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                        Payment Method\r\n                      </label>\r\n                      <select className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\">\r\n                        <option>M-Pesa</option>\r\n                        <option>Airtel Money</option>\r\n                        <option>Credit Card</option>\r\n                        <option>Bank Transfer</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                        Phone Number / Card Details\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"e.g., 0712345678\"\r\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex gap-3\">\r\n                    <button\r\n                      onClick={() => setShowPaymentModal(false)}\r\n                      className=\"flex-1 bg-gray-300 hover:bg-gray-400 text-gray-800 py-3 px-6 rounded-lg font-semibold transition-colors\"\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                    <button\r\n                      onClick={handlePayment}\r\n                      disabled={loading}\r\n                      className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white py-3 px-6 rounded-lg font-semibold transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                      {loading ? (\r\n                        <div className=\"flex items-center justify-center\">\r\n                          <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\r\n                          Processing...\r\n                        </div>\r\n                      ) : (\r\n                        `Pay KES ${getSelectedTotal().toLocaleString()}`\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-6xl mb-4\">âœ…</div>\r\n                  <h3 className=\"text-2xl font-bold text-green-600 mb-2\">Payment Successful!</h3>\r\n                  <p className=\"text-gray-600 mb-4\">Your images are now available in full resolution</p>\r\n                  <button\r\n                    onClick={() => setShowPaymentModal(false)}\r\n                    className=\"bg-green-600 hover:bg-green-700 text-white py-3 px-6 rounded-lg font-semibold transition-colors\"\r\n                  >\r\n                    Download Images\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}