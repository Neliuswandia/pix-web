{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Documents/dev-projects/pix-web/payment-app/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport Image from \"next/image\";\r\nimport { useSearchParams } from \"next/navigation\";\r\n\r\n// Mock data for demonstration - in real app this would come from database\r\nconst imageData: { [key: string]: any } = {\r\n  \"1\": {\r\n    id: \"1\",\r\n    src: \"/api/placeholder/800/600\", // This would be your actual image URL\r\n    title: \"Beautiful Landscape\",\r\n    photographer: \"John Doe\",\r\n    price: 2500,\r\n    description: \"A stunning landscape photograph captured during golden hour\"\r\n  },\r\n  \"2\": {\r\n    id: \"2\", \r\n    src: \"/api/placeholder/800/600\",\r\n    title: \"Urban Architecture\",\r\n    photographer: \"Jane Smith\", \r\n    price: 3000,\r\n    description: \"Modern city architecture with dramatic lighting\"\r\n  }\r\n};\r\n\r\nexport default function PaymentPage() {\r\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const searchParams = useSearchParams();\r\n  \r\n  // Get image ID from URL parameters\r\n  const imageId = searchParams.get('id') || '1';\r\n  const collectionId = searchParams.get('collection') || '';\r\n  \r\n  const image = imageData[imageId];\r\n\r\n  useEffect(() => {\r\n    // Auto-show payment modal after a short delay\r\n    const timer = setTimeout(() => {\r\n      setShowPaymentModal(true);\r\n    }, 1000);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const handlePayment = async () => {\r\n    setLoading(true);\r\n    \r\n    // Simulate payment processing\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    \r\n    setLoading(false);\r\n    setPaymentSuccess(true);\r\n    \r\n    // Hide modal after success\r\n    setTimeout(() => {\r\n      setShowPaymentModal(false);\r\n      // Here you would typically redirect to download page or show unblurred image\r\n    }, 2000);\r\n  };\r\n\r\n  if (!image) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">Image Not Found</h1>\r\n          <p className=\"text-gray-600\">The requested image could not be found.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-8\">\r\n      <div className=\"container mx-auto px-4 max-w-4xl\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">PixWeb Gallery</h1>\r\n          <p className=\"text-gray-600\">Premium Photography Collection</p>\r\n        </div>\r\n\r\n        {/* Image Display */}\r\n        <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n          <div className=\"relative\">\r\n            {/* Blurred Image */}\r\n            <div className=\"aspect-video relative\">\r\n              <Image\r\n                src=\"/next.svg\" // Using placeholder since we don't have actual images\r\n                alt={image.title}\r\n                fill\r\n                className={`object-cover transition-all duration-300 ${!paymentSuccess ? 'blur-image' : ''}`}\r\n                priority\r\n              />\r\n              \r\n              {/* Overlay for unpaid image */}\r\n              {!paymentSuccess && (\r\n                <div className=\"absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center\">\r\n                  <div className=\"text-center text-white\">\r\n                    <div className=\"text-6xl mb-4\">ðŸ”’</div>\r\n                    <h2 className=\"text-2xl font-bold mb-2\">Premium Content</h2>\r\n                    <p className=\"text-lg\">Purchase to view full resolution</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Image Info */}\r\n            <div className=\"p-6\">\r\n              <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">{image.title}</h2>\r\n              <p className=\"text-gray-600 mb-4\">by {image.photographer}</p>\r\n              <p className=\"text-gray-700 mb-4\">{image.description}</p>\r\n              \r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"text-2xl font-bold text-blue-600\">\r\n                  KES {image.price.toLocaleString()}\r\n                </div>\r\n                {!paymentSuccess && (\r\n                  <button\r\n                    onClick={() => setShowPaymentModal(true)}\r\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-semibold transition-colors\"\r\n                  >\r\n                    Purchase Now\r\n                  </button>\r\n                )}\r\n                {paymentSuccess && (\r\n                  <div className=\"flex items-center text-green-600\">\r\n                    <svg className=\"w-6 h-6 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                    </svg>\r\n                    <span className=\"font-semibold\">Payment Successful!</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Payment Modal */}\r\n        {showPaymentModal && (\r\n          <div className=\"fixed inset-0 payment-modal flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white rounded-lg shadow-2xl max-w-md w-full p-6 transform transition-all\">\r\n              {!paymentSuccess ? (\r\n                <>\r\n                  <div className=\"text-center mb-6\">\r\n                    <div className=\"text-4xl mb-4\">ðŸ’³</div>\r\n                    <h3 className=\"text-2xl font-bold text-gray-800 mb-2\">Complete Purchase</h3>\r\n                    <p className=\"text-gray-600\">Secure payment for high-resolution image</p>\r\n                  </div>\r\n\r\n                  <div className=\"border border-gray-200 rounded-lg p-4 mb-6\">\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <span className=\"font-medium text-gray-700\">{image.title}</span>\r\n                      <span className=\"font-bold text-blue-600\">KES {image.price.toLocaleString()}</span>\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-500\">by {image.photographer}</div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-4 mb-6\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                        Payment Method\r\n                      </label>\r\n                      <select className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\">\r\n                        <option>M-Pesa</option>\r\n                        <option>Airtel Money</option>\r\n                        <option>Credit Card</option>\r\n                        <option>Bank Transfer</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                        Phone Number / Card Details\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"e.g., 0712345678\"\r\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex gap-3\">\r\n                    <button\r\n                      onClick={() => setShowPaymentModal(false)}\r\n                      className=\"flex-1 bg-gray-300 hover:bg-gray-400 text-gray-800 py-3 px-6 rounded-lg font-semibold transition-colors\"\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                    <button\r\n                      onClick={handlePayment}\r\n                      disabled={loading}\r\n                      className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white py-3 px-6 rounded-lg font-semibold transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                      {loading ? (\r\n                        <div className=\"flex items-center justify-center\">\r\n                          <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\r\n                          Processing...\r\n                        </div>\r\n                      ) : (\r\n                        `Pay KES ${image.price.toLocaleString()}`\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-6xl mb-4\">âœ…</div>\r\n                  <h3 className=\"text-2xl font-bold text-green-600 mb-2\">Payment Successful!</h3>\r\n                  <p className=\"text-gray-600 mb-4\">Your image is now available in full resolution</p>\r\n                  <button\r\n                    onClick={() => {\r\n                      // Here you would trigger download or show unblurred image\r\n                      setShowPaymentModal(false);\r\n                    }}\r\n                    className=\"bg-green-600 hover:bg-green-700 text-white py-3 px-6 rounded-lg font-semibold transition-colors\"\r\n                  >\r\n                    Download Image\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}